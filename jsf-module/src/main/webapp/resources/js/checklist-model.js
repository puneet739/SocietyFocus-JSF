angular.module("checklist-model",[]).directive("checklistModel",["$parse","$compile",function(a,b){function c(a,b,c){if(angular.isArray(a))for(var d=a.length;d--;)if(c(a[d],b))return!0;return!1}function d(a,b,d){return a=angular.isArray(a)?a:[],c(a,b,d)||a.push(b),a}function e(a,b,c){if(angular.isArray(a))for(var d=a.length;d--;)if(c(a[d],b)){a.splice(d,1);break}return a}function f(f,g,h){function q(a,b){var c=j(f.$parent);angular.isFunction(k)&&(b===!0?k(f.$parent,d(c,a,o)):k(f.$parent,e(c,a,o)))}function r(a,b){return m&&m(f)===!1?void q(n,f[h.ngModel]):void(f[h.ngModel]=c(a,n,o))}var i=h.checklistModel;h.$set("checklistModel",null),b(g)(f),h.$set("checklistModel",i);var j=a(i),k=j.assign,l=a(h.checklistChange),m=a(h.checklistBeforeChange),n=h.checklistValue?a(h.checklistValue)(f.$parent):h.value,o=angular.equals;if(h.hasOwnProperty("checklistComparator"))if("."==h.checklistComparator[0]){var p=h.checklistComparator.substring(1);o=function(a,b){return a[p]===b[p]}}else o=a(h.checklistComparator)(f.$parent);f.$watch(h.ngModel,function(a,b){if(a!==b){if(m&&m(f)===!1)return void(f[h.ngModel]=c(j(f.$parent),n,o));q(n,a),l&&l(f)}}),angular.isFunction(f.$parent.$watchCollection)?f.$parent.$watchCollection(i,r):f.$parent.$watch(i,r,!0)}return{restrict:"A",priority:1e3,terminal:!0,scope:!0,compile:function(a,b){if(("INPUT"!==a[0].tagName||"checkbox"!==b.type)&&"MD-CHECKBOX"!==a[0].tagName&&!b.btnCheckbox)throw'checklist-model should be applied to `input[type="checkbox"]` or `md-checkbox`.';if(!b.checklistValue&&!b.value)throw"You should provide `value` or `checklist-value`.";return b.ngModel||b.$set("ngModel","checked"),f}}}]);